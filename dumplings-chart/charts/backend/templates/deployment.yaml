---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Chart.Name }}
    app.kubernetes.io/name: dumplings-backend
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: {{ .Chart.Name }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    type: {{ .Values.strategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true" 
    spec:
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.global.backend.AppVer }}"
          name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: {{ .Chart.Name }}
              containerPort: {{ .Values.containerPort }}
          livenessProbe:
            # проверка живучести выполнит запрос HTTP GET       
            httpGet:
              # путь к запросу в HTTP-запросе          
              path: /health
              # порт, к которому должна подключиться проверка        
              port: 8081
            # перед исполнением первой проверки подождать 15 секунд, пока стартанёт бэкенд          
            initialDelaySeconds: 15
            # период выполнения проверки
            periodSeconds: 30
            # максимальное время выполнения проверки (по умолчанию 1 раз)
            timeoutSeconds: 2
            # сколько раз пробовать попытку, если она провалилась (по умолчанию 1 раз)
            failureThreshold: 6
      # чтобы Кубер мог скачивать образы из нашего GitLab Registry  
      imagePullSecrets:
        - name: docker-config-secret-{{ .Chart.Name }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: {{ .Chart.Name }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: {{ .Chart.Name }}
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
      - containerName: "*"
        minAllowed:
          cpu: 0m
          memory: 0Mi
        maxAllowed:
          cpu: 1m
          memory: 500Mi
        controlledResources: ["cpu", "memory"]
        controlledValues: RequestsAndLimits 
