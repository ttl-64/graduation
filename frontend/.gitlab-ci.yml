stages:
  - build
  - test
  - release

variables:
  FRONTEND_VERSION: 1.0.${CI_PIPELINE_ID}

build-frontend-docker-job:
  stage: build
  only:
    changes:
      - frontend/**/*
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/frontend:$CI_COMMIT_SHA"
      --build-arg VERSION=${FRONTEND_VERSION}
      --cache=true


sonarqube-frontend-sast:
  stage: test
  dependencies:
    - build-frontend-docker-job
  image:
    name: sonarsource/sonar-scanner-cli
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/frontend/.sonar"  # Defines the location of the analysis task cache
  cache:
    paths:
      - .sonar/cache
  script:
    - cd frontend
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.login=${SONAR_LOGIN_FRONT} -Dsonar.projectName=${SONAR_PROJECT_KEY_FRONT} -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT}

upload-frontend-release:
  needs: 
    - sonarqube-frontend-sast
    - build-frontend-docker-job
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA $FRONTEND_VERSION
    - crane tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA latest
    - echo "${FRONTEND_VERSION}" > frontver.txt
  artifacts:
    name: "frontver"
    expire_in: "5 days"
    paths: ['frontver.txt']
  cache: [ ]